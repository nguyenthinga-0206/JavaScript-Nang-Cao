{"id":"src/index.js","dependencies":[{"name":"/project/JavaScript-Nang-Cao/package.json","includedInParent":true,"mtime":1663917656551}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//...copy\nvar arr1 = [1, 2, 3, 4, 5];\nvar state = {\n  name: \"Nga\",\n  address: \"Thanh Hoa\",\n  channel: \"Eric\"\n}; // console.log(\"get data arr1 >> \", arr1);\n// let arr2 = [0,...arr1, 6] // copy lai arr1 bo vao\n// let arr2 = { ...state, channel: \"erict\" };\n// console.log(\"get data arr1 >> \", arr2);\n// Cach 1\n// let name = state.name;\n// let address = state.address;\n// let channel = state.channel;\n// Cach 2\n// let { name1, address, channel } = state; // phai trung ten voi key cua object\n// console.log(\"check key >> \", name1, address, channel);\n\nvar arr = [\"Nga\", \"Eric\"];\nvar name = arr[0],\n    channel = arr[1];\nconsole.log(\"check key >> \", name, channel); // callback\n\nvar callback = function callback(error, data) {\n  if (error) {\n    console.log(\"Error >> \", error);\n  }\n\n  if (data) {\n    console.log(\"OK >> \", data);\n  }\n};\n\nfunction getTodos(id, callback) {\n  return new Promise(function (resolve, reject) {\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        var data = JSON.parse(request.responseText); // const dataString = JSON.stringify(data);\n        // callback(undefined, data);\n        // callback(undefined, dataString);\n\n        resolve(data);\n      }\n\n      if (this.readyState === 4 && this.status !== 200) {\n        // callback(\"Somethings wrongs\", undefined);\n        reject(\"Error id \" + id);\n      }\n    };\n\n    request.open(\"GET\", \"https://jsonplaceholder.typicode.com/todos/\".concat(id), true); // request.open(\"GET\", \"src/data.json\", true);\n\n    request.send();\n  });\n} // Async & Await example\n// const getNewTodo = async (id) => {\n//   let response = await fetch(\n//     `https://jsonplaceholder.typicode.com/todos/${id}`\n//   );\n//   if (response && response.status !== 200) {\n//     throw new Error(\"Somethong wrongs with status code \" + response.status);\n//     // reject\n//   }\n//   let data = await response.json();\n//   return data; //resolve\n// };\n\n\nvar getNewTodo = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(id) {\n    var response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"https://jsonplaceholder.typicode.com/todos/\".concat(id));\n\n          case 3:\n            response = _context.sent;\n\n            if (!(response && response.status !== 200)) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error(\"Somethong wrongs with status code \" + response.status);\n\n          case 6:\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"check catch >> \", _context.t0.message);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n\n  return function getNewTodo(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // getNewTodo(\"gfasa\")\n//   .then((data) => {\n//     console.log(\"check get data >> \", data);\n//   })\n//   .catch((error) => {\n//     console.log(\"check error >> \", error.message);\n//   });\n// fetch API example\n// fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n//   .then((Response) => {\n//     return Response.json();\n//   })\n//   .then((data) => {\n//     console.log(\"check fetch data >> \", data);\n//   });\n// Callbacck Hell example\n// getTodos(1, (error, data) => {\n//   if (error) {\n//     console.log(\"Error >> \", error);\n//   }\n//   if (data) {\n//     console.log(\"OK >> \", data);\n//     getTodos(2, (error, data) => {\n//       if (error) {\n//         console.log(\"Error >> \", error);\n//       }\n//       if (data) {\n//         console.log(\"OK >> \", data);\n//         getTodos(3, (error, data) => {\n//           if (error) {\n//             console.log(\"Error >> \", error);\n//           }\n//           if (data) {\n//             console.log(\"OK >> \", data);\n//           }\n//         });\n//       }\n//     });\n//   }\n// });\n// getTodos(1, callback);\n// Promise example\n// getTodos(1)\n//   .then((data) => {\n//     console.log(\"OK1 >> \", data);\n//     getTodos(2).then((data) => {\n//       console.log(\"OK2 >> \", data);\n//     });\n//   })\n//   .catch((error) => {\n//     console.log(\">> \", error);\n//   });\n// getTodos(1)\n//   .then((data1) => {\n//     console.log(\"OK1 >> \", data1);\n//     return getTodos(2);\n//     // return getTodos(\"2jasj\");\n//   })\n//   .then((data2) => {\n//     console.log(\"OK2 >> \", data2);\n//     return getTodos(3);\n//   })\n//   .then((data3) => {\n//     console.log(\"OK3 >> \", data3);\n//   })\n//   .catch((error) => {\n//     console.log(\">> \", error);\n//   });\n// promise example\n// const promiseExp = () => {\n//   // Cach 1\n//   return new Promise((resolve, reject) => {\n//     // resolve(\"get some data\");\n//     resolve({ name: \"Nga\", channel: \"erict\" });\n//   });\n//   // Cach 2\n//   // return new Promise(function(resolve, reject) {});\n// };\n// promiseExp()\n//   .then((data) => {\n//     console.log(data);\n//   }).then((error) => {\n//     console.log(\"Error\");\n//   });"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":47},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":4},"source":"src/index.js","original":{"line":2,"column":4},"name":"arr1"},{"generated":{"line":10,"column":8},"source":"src/index.js","original":{"line":2,"column":8}},{"generated":{"line":10,"column":11},"source":"src/index.js","original":{"line":2,"column":11}},{"generated":{"line":10,"column":12},"source":"src/index.js","original":{"line":2,"column":12}},{"generated":{"line":10,"column":13},"source":"src/index.js","original":{"line":2,"column":11}},{"generated":{"line":10,"column":15},"source":"src/index.js","original":{"line":2,"column":15}},{"generated":{"line":10,"column":16},"source":"src/index.js","original":{"line":2,"column":11}},{"generated":{"line":10,"column":18},"source":"src/index.js","original":{"line":2,"column":18}},{"generated":{"line":10,"column":19},"source":"src/index.js","original":{"line":2,"column":11}},{"generated":{"line":10,"column":21},"source":"src/index.js","original":{"line":2,"column":21}},{"generated":{"line":10,"column":22},"source":"src/index.js","original":{"line":2,"column":11}},{"generated":{"line":10,"column":24},"source":"src/index.js","original":{"line":2,"column":24}},{"generated":{"line":10,"column":25},"source":"src/index.js","original":{"line":2,"column":11}},{"generated":{"line":10,"column":26},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":4},"source":"src/index.js","original":{"line":3,"column":4},"name":"state"},{"generated":{"line":11,"column":9},"source":"src/index.js","original":{"line":3,"column":9}},{"generated":{"line":11,"column":12},"source":"src/index.js","original":{"line":3,"column":12}},{"generated":{"line":12,"column":2},"source":"src/index.js","original":{"line":4,"column":2},"name":"name"},{"generated":{"line":12,"column":6},"source":"src/index.js","original":{"line":4,"column":6}},{"generated":{"line":12,"column":8},"source":"src/index.js","original":{"line":4,"column":8}},{"generated":{"line":12,"column":13},"source":"src/index.js","original":{"line":3,"column":12}},{"generated":{"line":13,"column":2},"source":"src/index.js","original":{"line":5,"column":2},"name":"address"},{"generated":{"line":13,"column":9},"source":"src/index.js","original":{"line":5,"column":9}},{"generated":{"line":13,"column":11},"source":"src/index.js","original":{"line":5,"column":11}},{"generated":{"line":13,"column":22},"source":"src/index.js","original":{"line":3,"column":12}},{"generated":{"line":14,"column":2},"source":"src/index.js","original":{"line":6,"column":2},"name":"channel"},{"generated":{"line":14,"column":9},"source":"src/index.js","original":{"line":6,"column":9}},{"generated":{"line":14,"column":11},"source":"src/index.js","original":{"line":6,"column":11}},{"generated":{"line":15,"column":0},"source":"src/index.js","original":{"line":3,"column":12}},{"generated":{"line":15,"column":1},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":3},"source":"src/index.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"src/index.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"src/index.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":14,"column":0}},{"generated":{"line":20,"column":0},"source":"src/index.js","original":{"line":15,"column":0}},{"generated":{"line":21,"column":0},"source":"src/index.js","original":{"line":16,"column":0}},{"generated":{"line":22,"column":0},"source":"src/index.js","original":{"line":17,"column":0}},{"generated":{"line":23,"column":0},"source":"src/index.js","original":{"line":19,"column":0}},{"generated":{"line":24,"column":0},"source":"src/index.js","original":{"line":20,"column":0}},{"generated":{"line":25,"column":0},"source":"src/index.js","original":{"line":21,"column":0}},{"generated":{"line":27,"column":0},"source":"src/index.js","original":{"line":23,"column":0}},{"generated":{"line":27,"column":4},"source":"src/index.js","original":{"line":23,"column":4},"name":"arr"},{"generated":{"line":27,"column":7},"source":"src/index.js","original":{"line":23,"column":7}},{"generated":{"line":27,"column":10},"source":"src/index.js","original":{"line":23,"column":10}},{"generated":{"line":27,"column":11},"source":"src/index.js","original":{"line":23,"column":11}},{"generated":{"line":27,"column":16},"source":"src/index.js","original":{"line":23,"column":10}},{"generated":{"line":27,"column":18},"source":"src/index.js","original":{"line":23,"column":18}},{"generated":{"line":27,"column":24},"source":"src/index.js","original":{"line":23,"column":10}},{"generated":{"line":27,"column":25},"source":"src/index.js","original":{"line":23,"column":0}},{"generated":{"line":28,"column":0},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":28,"column":4},"source":"src/index.js","original":{"line":24,"column":5},"name":"name"},{"generated":{"line":28,"column":8},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":28,"column":11},"source":"src/index.js","original":{"line":24,"column":22},"name":"arr"},{"generated":{"line":28,"column":14},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":29,"column":0},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":29,"column":4},"source":"src/index.js","original":{"line":24,"column":11},"name":"channel"},{"generated":{"line":29,"column":11},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":29,"column":14},"source":"src/index.js","original":{"line":24,"column":22},"name":"arr"},{"generated":{"line":29,"column":17},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":30,"column":0},"source":"src/index.js","original":{"line":25,"column":0},"name":"console"},{"generated":{"line":30,"column":7},"source":"src/index.js","original":{"line":25,"column":7}},{"generated":{"line":30,"column":8},"source":"src/index.js","original":{"line":25,"column":8},"name":"log"},{"generated":{"line":30,"column":11},"source":"src/index.js","original":{"line":25,"column":0}},{"generated":{"line":30,"column":12},"source":"src/index.js","original":{"line":25,"column":12}},{"generated":{"line":30,"column":27},"source":"src/index.js","original":{"line":25,"column":0}},{"generated":{"line":30,"column":29},"source":"src/index.js","original":{"line":25,"column":29},"name":"name"},{"generated":{"line":30,"column":33},"source":"src/index.js","original":{"line":25,"column":0}},{"generated":{"line":30,"column":35},"source":"src/index.js","original":{"line":25,"column":35},"name":"channel"},{"generated":{"line":30,"column":42},"source":"src/index.js","original":{"line":25,"column":0}},{"generated":{"line":30,"column":45},"source":"src/index.js","original":{"line":27,"column":0}},{"generated":{"line":32,"column":0},"source":"src/index.js","original":{"line":28,"column":0}},{"generated":{"line":32,"column":4},"source":"src/index.js","original":{"line":28,"column":6},"name":"callback"},{"generated":{"line":32,"column":12},"source":"src/index.js","original":{"line":28,"column":14}},{"generated":{"line":32,"column":15},"source":"src/index.js","original":{"line":28,"column":17}},{"generated":{"line":32,"column":24},"source":"src/index.js","original":{"line":28,"column":6},"name":"callback"},{"generated":{"line":32,"column":32},"source":"src/index.js","original":{"line":28,"column":17}},{"generated":{"line":32,"column":33},"source":"src/index.js","original":{"line":28,"column":18},"name":"error"},{"generated":{"line":32,"column":38},"source":"src/index.js","original":{"line":28,"column":17}},{"generated":{"line":32,"column":40},"source":"src/index.js","original":{"line":28,"column":25},"name":"data"},{"generated":{"line":32,"column":44},"source":"src/index.js","original":{"line":28,"column":17}},{"generated":{"line":32,"column":46},"source":"src/index.js","original":{"line":28,"column":34}},{"generated":{"line":33,"column":2},"source":"src/index.js","original":{"line":29,"column":2}},{"generated":{"line":33,"column":6},"source":"src/index.js","original":{"line":29,"column":6},"name":"error"},{"generated":{"line":33,"column":11},"source":"src/index.js","original":{"line":29,"column":2}},{"generated":{"line":33,"column":13},"source":"src/index.js","original":{"line":29,"column":13}},{"generated":{"line":34,"column":4},"source":"src/index.js","original":{"line":30,"column":4},"name":"console"},{"generated":{"line":34,"column":11},"source":"src/index.js","original":{"line":30,"column":11}},{"generated":{"line":34,"column":12},"source":"src/index.js","original":{"line":30,"column":12},"name":"log"},{"generated":{"line":34,"column":15},"source":"src/index.js","original":{"line":30,"column":4}},{"generated":{"line":34,"column":16},"source":"src/index.js","original":{"line":30,"column":16}},{"generated":{"line":34,"column":27},"source":"src/index.js","original":{"line":30,"column":4}},{"generated":{"line":34,"column":29},"source":"src/index.js","original":{"line":30,"column":29},"name":"error"},{"generated":{"line":34,"column":34},"source":"src/index.js","original":{"line":30,"column":4}},{"generated":{"line":35,"column":2},"source":"src/index.js","original":{"line":31,"column":3}},{"generated":{"line":37,"column":2},"source":"src/index.js","original":{"line":32,"column":2}},{"generated":{"line":37,"column":6},"source":"src/index.js","original":{"line":32,"column":6},"name":"data"},{"generated":{"line":37,"column":10},"source":"src/index.js","original":{"line":32,"column":2}},{"generated":{"line":37,"column":12},"source":"src/index.js","original":{"line":32,"column":12}},{"generated":{"line":38,"column":4},"source":"src/index.js","original":{"line":33,"column":4},"name":"console"},{"generated":{"line":38,"column":11},"source":"src/index.js","original":{"line":33,"column":11}},{"generated":{"line":38,"column":12},"source":"src/index.js","original":{"line":33,"column":12},"name":"log"},{"generated":{"line":38,"column":15},"source":"src/index.js","original":{"line":33,"column":4}},{"generated":{"line":38,"column":16},"source":"src/index.js","original":{"line":33,"column":16}},{"generated":{"line":38,"column":24},"source":"src/index.js","original":{"line":33,"column":4}},{"generated":{"line":38,"column":26},"source":"src/index.js","original":{"line":33,"column":26},"name":"data"},{"generated":{"line":38,"column":30},"source":"src/index.js","original":{"line":33,"column":4}},{"generated":{"line":39,"column":2},"source":"src/index.js","original":{"line":34,"column":3}},{"generated":{"line":40,"column":0},"source":"src/index.js","original":{"line":35,"column":1}},{"generated":{"line":40,"column":1},"source":"src/index.js","original":{"line":28,"column":0}},{"generated":{"line":42,"column":0},"source":"src/index.js","original":{"line":37,"column":0}},{"generated":{"line":42,"column":9},"source":"src/index.js","original":{"line":37,"column":9},"name":"getTodos"},{"generated":{"line":42,"column":17},"source":"src/index.js","original":{"line":37,"column":0}},{"generated":{"line":42,"column":18},"source":"src/index.js","original":{"line":37,"column":18},"name":"id"},{"generated":{"line":42,"column":20},"source":"src/index.js","original":{"line":37,"column":0}},{"generated":{"line":42,"column":22},"source":"src/index.js","original":{"line":37,"column":22},"name":"callback"},{"generated":{"line":42,"column":30},"source":"src/index.js","original":{"line":37,"column":0}},{"generated":{"line":42,"column":32},"source":"src/index.js","original":{"line":37,"column":32}},{"generated":{"line":43,"column":2},"source":"src/index.js","original":{"line":38,"column":2}},{"generated":{"line":43,"column":9},"source":"src/index.js","original":{"line":38,"column":9}},{"generated":{"line":43,"column":13},"source":"src/index.js","original":{"line":38,"column":13},"name":"Promise"},{"generated":{"line":43,"column":20},"source":"src/index.js","original":{"line":38,"column":9}},{"generated":{"line":43,"column":21},"source":"src/index.js","original":{"line":38,"column":21}},{"generated":{"line":43,"column":31},"source":"src/index.js","original":{"line":38,"column":22},"name":"resolve"},{"generated":{"line":43,"column":38},"source":"src/index.js","original":{"line":38,"column":21}},{"generated":{"line":43,"column":40},"source":"src/index.js","original":{"line":38,"column":31},"name":"reject"},{"generated":{"line":43,"column":46},"source":"src/index.js","original":{"line":38,"column":21}},{"generated":{"line":43,"column":48},"source":"src/index.js","original":{"line":38,"column":42}},{"generated":{"line":44,"column":4},"source":"src/index.js","original":{"line":39,"column":4}},{"generated":{"line":44,"column":8},"source":"src/index.js","original":{"line":39,"column":8},"name":"request"},{"generated":{"line":44,"column":15},"source":"src/index.js","original":{"line":39,"column":15}},{"generated":{"line":44,"column":18},"source":"src/index.js","original":{"line":39,"column":18}},{"generated":{"line":44,"column":22},"source":"src/index.js","original":{"line":39,"column":22},"name":"XMLHttpRequest"},{"generated":{"line":44,"column":36},"source":"src/index.js","original":{"line":39,"column":18}},{"generated":{"line":44,"column":38},"source":"src/index.js","original":{"line":39,"column":4}},{"generated":{"line":46,"column":4},"source":"src/index.js","original":{"line":40,"column":4},"name":"request"},{"generated":{"line":46,"column":11},"source":"src/index.js","original":{"line":40,"column":11}},{"generated":{"line":46,"column":12},"source":"src/index.js","original":{"line":40,"column":12},"name":"onreadystatechange"},{"generated":{"line":46,"column":30},"source":"src/index.js","original":{"line":40,"column":4}},{"generated":{"line":46,"column":33},"source":"src/index.js","original":{"line":40,"column":33}},{"generated":{"line":46,"column":45},"source":"src/index.js","original":{"line":40,"column":45}},{"generated":{"line":47,"column":6},"source":"src/index.js","original":{"line":41,"column":6}},{"generated":{"line":47,"column":10},"source":"src/index.js","original":{"line":41,"column":10}},{"generated":{"line":47,"column":15},"source":"src/index.js","original":{"line":41,"column":15},"name":"readyState"},{"generated":{"line":47,"column":25},"source":"src/index.js","original":{"line":41,"column":10}},{"generated":{"line":47,"column":30},"source":"src/index.js","original":{"line":41,"column":30}},{"generated":{"line":47,"column":31},"source":"src/index.js","original":{"line":41,"column":10}},{"generated":{"line":47,"column":35},"source":"src/index.js","original":{"line":41,"column":35}},{"generated":{"line":47,"column":40},"source":"src/index.js","original":{"line":41,"column":40},"name":"status"},{"generated":{"line":47,"column":46},"source":"src/index.js","original":{"line":41,"column":35}},{"generated":{"line":47,"column":51},"source":"src/index.js","original":{"line":41,"column":51}},{"generated":{"line":47,"column":54},"source":"src/index.js","original":{"line":41,"column":6}},{"generated":{"line":47,"column":56},"source":"src/index.js","original":{"line":41,"column":56}},{"generated":{"line":48,"column":8},"source":"src/index.js","original":{"line":42,"column":8}},{"generated":{"line":48,"column":12},"source":"src/index.js","original":{"line":42,"column":14},"name":"data"},{"generated":{"line":48,"column":16},"source":"src/index.js","original":{"line":42,"column":18}},{"generated":{"line":48,"column":19},"source":"src/index.js","original":{"line":42,"column":21},"name":"JSON"},{"generated":{"line":48,"column":23},"source":"src/index.js","original":{"line":42,"column":25}},{"generated":{"line":48,"column":24},"source":"src/index.js","original":{"line":42,"column":26},"name":"parse"},{"generated":{"line":48,"column":29},"source":"src/index.js","original":{"line":42,"column":21}},{"generated":{"line":48,"column":30},"source":"src/index.js","original":{"line":42,"column":32},"name":"request"},{"generated":{"line":48,"column":37},"source":"src/index.js","original":{"line":42,"column":39}},{"generated":{"line":48,"column":38},"source":"src/index.js","original":{"line":42,"column":40},"name":"responseText"},{"generated":{"line":48,"column":50},"source":"src/index.js","original":{"line":42,"column":21}},{"generated":{"line":48,"column":51},"source":"src/index.js","original":{"line":42,"column":8}},{"generated":{"line":48,"column":52},"source":"src/index.js","original":{"line":41,"column":56}},{"generated":{"line":48,"column":53},"source":"src/index.js","original":{"line":43,"column":8}},{"generated":{"line":49,"column":8},"source":"src/index.js","original":{"line":44,"column":8}},{"generated":{"line":50,"column":8},"source":"src/index.js","original":{"line":45,"column":8}},{"generated":{"line":52,"column":8},"source":"src/index.js","original":{"line":46,"column":8},"name":"resolve"},{"generated":{"line":52,"column":15},"source":"src/index.js","original":{"line":46,"column":15}},{"generated":{"line":52,"column":16},"source":"src/index.js","original":{"line":46,"column":16},"name":"data"},{"generated":{"line":52,"column":20},"source":"src/index.js","original":{"line":46,"column":15}},{"generated":{"line":52,"column":21},"source":"src/index.js","original":{"line":46,"column":8}},{"generated":{"line":53,"column":6},"source":"src/index.js","original":{"line":47,"column":7}},{"generated":{"line":55,"column":6},"source":"src/index.js","original":{"line":49,"column":6}},{"generated":{"line":55,"column":10},"source":"src/index.js","original":{"line":49,"column":10}},{"generated":{"line":55,"column":15},"source":"src/index.js","original":{"line":49,"column":15},"name":"readyState"},{"generated":{"line":55,"column":25},"source":"src/index.js","original":{"line":49,"column":10}},{"generated":{"line":55,"column":30},"source":"src/index.js","original":{"line":49,"column":30}},{"generated":{"line":55,"column":31},"source":"src/index.js","original":{"line":49,"column":10}},{"generated":{"line":55,"column":35},"source":"src/index.js","original":{"line":49,"column":35}},{"generated":{"line":55,"column":40},"source":"src/index.js","original":{"line":49,"column":40},"name":"status"},{"generated":{"line":55,"column":46},"source":"src/index.js","original":{"line":49,"column":35}},{"generated":{"line":55,"column":51},"source":"src/index.js","original":{"line":49,"column":51}},{"generated":{"line":55,"column":54},"source":"src/index.js","original":{"line":49,"column":6}},{"generated":{"line":55,"column":56},"source":"src/index.js","original":{"line":49,"column":56}},{"generated":{"line":56,"column":8},"source":"src/index.js","original":{"line":50,"column":8}},{"generated":{"line":57,"column":8},"source":"src/index.js","original":{"line":51,"column":8},"name":"reject"},{"generated":{"line":57,"column":14},"source":"src/index.js","original":{"line":51,"column":14}},{"generated":{"line":57,"column":15},"source":"src/index.js","original":{"line":51,"column":15}},{"generated":{"line":57,"column":29},"source":"src/index.js","original":{"line":51,"column":29},"name":"id"},{"generated":{"line":57,"column":31},"source":"src/index.js","original":{"line":51,"column":14}},{"generated":{"line":57,"column":32},"source":"src/index.js","original":{"line":51,"column":8}},{"generated":{"line":58,"column":6},"source":"src/index.js","original":{"line":52,"column":7}},{"generated":{"line":59,"column":4},"source":"src/index.js","original":{"line":53,"column":5}},{"generated":{"line":59,"column":5},"source":"src/index.js","original":{"line":40,"column":4}},{"generated":{"line":61,"column":4},"source":"src/index.js","original":{"line":55,"column":4},"name":"request"},{"generated":{"line":61,"column":11},"source":"src/index.js","original":{"line":55,"column":11}},{"generated":{"line":61,"column":12},"source":"src/index.js","original":{"line":55,"column":12},"name":"open"},{"generated":{"line":61,"column":16},"source":"src/index.js","original":{"line":55,"column":4}},{"generated":{"line":61,"column":17},"source":"src/index.js","original":{"line":56,"column":6}},{"generated":{"line":61,"column":22},"source":"src/index.js","original":{"line":55,"column":4}},{"generated":{"line":61,"column":77},"source":"src/index.js","original":{"line":57,"column":52},"name":"id"},{"generated":{"line":61,"column":79},"source":"src/index.js","original":{"line":55,"column":4}},{"generated":{"line":61,"column":82},"source":"src/index.js","original":{"line":58,"column":6}},{"generated":{"line":61,"column":86},"source":"src/index.js","original":{"line":55,"column":4}},{"generated":{"line":61,"column":88},"source":"src/index.js","original":{"line":38,"column":42}},{"generated":{"line":61,"column":89},"source":"src/index.js","original":{"line":60,"column":4}},{"generated":{"line":63,"column":4},"source":"src/index.js","original":{"line":61,"column":4},"name":"request"},{"generated":{"line":63,"column":11},"source":"src/index.js","original":{"line":61,"column":11}},{"generated":{"line":63,"column":12},"source":"src/index.js","original":{"line":61,"column":12},"name":"send"},{"generated":{"line":63,"column":16},"source":"src/index.js","original":{"line":61,"column":4}},{"generated":{"line":64,"column":2},"source":"src/index.js","original":{"line":62,"column":3}},{"generated":{"line":64,"column":3},"source":"src/index.js","original":{"line":38,"column":9}},{"generated":{"line":64,"column":4},"source":"src/index.js","original":{"line":38,"column":2}},{"generated":{"line":65,"column":0},"source":"src/index.js","original":{"line":63,"column":1}},{"generated":{"line":65,"column":2},"source":"src/index.js","original":{"line":65,"column":0}},{"generated":{"line":66,"column":0},"source":"src/index.js","original":{"line":66,"column":0}},{"generated":{"line":67,"column":0},"source":"src/index.js","original":{"line":67,"column":0}},{"generated":{"line":68,"column":0},"source":"src/index.js","original":{"line":68,"column":0}},{"generated":{"line":69,"column":0},"source":"src/index.js","original":{"line":69,"column":0}},{"generated":{"line":70,"column":0},"source":"src/index.js","original":{"line":71,"column":0}},{"generated":{"line":71,"column":0},"source":"src/index.js","original":{"line":72,"column":0}},{"generated":{"line":72,"column":0},"source":"src/index.js","original":{"line":73,"column":0}},{"generated":{"line":73,"column":0},"source":"src/index.js","original":{"line":74,"column":0}},{"generated":{"line":74,"column":0},"source":"src/index.js","original":{"line":76,"column":0}},{"generated":{"line":75,"column":0},"source":"src/index.js","original":{"line":77,"column":0}},{"generated":{"line":76,"column":0},"source":"src/index.js","original":{"line":78,"column":0}},{"generated":{"line":79,"column":0},"source":"src/index.js","original":{"line":80,"column":0}},{"generated":{"line":79,"column":4},"source":"src/index.js","original":{"line":80,"column":6},"name":"getNewTodo"},{"generated":{"line":79,"column":14},"source":"src/index.js","original":{"line":80,"column":16}},{"generated":{"line":80,"column":2},"source":"src/index.js","original":{"line":80,"column":16}},{"generated":{"line":80,"column":72},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":80,"column":89},"source":"src/index.js","original":{"line":80,"column":26},"name":"id"},{"generated":{"line":80,"column":91},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":81,"column":4},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":82,"column":4},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":83,"column":6},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":84,"column":8},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":85,"column":10},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":86,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":87,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":88,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":88,"column":19},"source":"src/index.js","original":{"line":82,"column":25},"name":"fetch"},{"generated":{"line":88,"column":24},"source":"src/index.js","original":{"line":82,"column":30}},{"generated":{"line":88,"column":78},"source":"src/index.js","original":{"line":83,"column":52},"name":"id"},{"generated":{"line":88,"column":80},"source":"src/index.js","original":{"line":82,"column":30}},{"generated":{"line":88,"column":82},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":90,"column":10},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":91,"column":12},"source":"src/index.js","original":{"line":82,"column":8},"name":"response"},{"generated":{"line":91,"column":20},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":93,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":93,"column":18},"source":"src/index.js","original":{"line":86,"column":8},"name":"response"},{"generated":{"line":93,"column":26},"source":"src/index.js","original":{"line":86,"column":16}},{"generated":{"line":93,"column":30},"source":"src/index.js","original":{"line":86,"column":20},"name":"response"},{"generated":{"line":93,"column":38},"source":"src/index.js","original":{"line":86,"column":28}},{"generated":{"line":93,"column":39},"source":"src/index.js","original":{"line":86,"column":29},"name":"status"},{"generated":{"line":93,"column":45},"source":"src/index.js","original":{"line":86,"column":20}},{"generated":{"line":93,"column":50},"source":"src/index.js","original":{"line":86,"column":40}},{"generated":{"line":93,"column":53},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":94,"column":14},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":95,"column":14},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":96,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":98,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":98,"column":18},"source":"src/index.js","original":{"line":87,"column":12}},{"generated":{"line":98,"column":22},"source":"src/index.js","original":{"line":87,"column":16},"name":"Error"},{"generated":{"line":98,"column":27},"source":"src/index.js","original":{"line":87,"column":12}},{"generated":{"line":98,"column":28},"source":"src/index.js","original":{"line":87,"column":22}},{"generated":{"line":98,"column":67},"source":"src/index.js","original":{"line":87,"column":61},"name":"response"},{"generated":{"line":98,"column":75},"source":"src/index.js","original":{"line":87,"column":69}},{"generated":{"line":98,"column":76},"source":"src/index.js","original":{"line":87,"column":70},"name":"status"},{"generated":{"line":98,"column":82},"source":"src/index.js","original":{"line":87,"column":12}},{"generated":{"line":98,"column":83},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":100,"column":10},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":101,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":102,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":102,"column":19},"source":"src/index.js","original":{"line":91,"column":21},"name":"response"},{"generated":{"line":102,"column":27},"source":"src/index.js","original":{"line":91,"column":29}},{"generated":{"line":102,"column":28},"source":"src/index.js","original":{"line":91,"column":30},"name":"json"},{"generated":{"line":102,"column":32},"source":"src/index.js","original":{"line":91,"column":21}},{"generated":{"line":102,"column":34},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":104,"column":10},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":105,"column":12},"source":"src/index.js","original":{"line":91,"column":8},"name":"data"},{"generated":{"line":105,"column":16},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":106,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":106,"column":45},"source":"src/index.js","original":{"line":92,"column":11},"name":"data"},{"generated":{"line":106,"column":49},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":108,"column":10},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":109,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":110,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":111,"column":12},"source":"src/index.js","original":{"line":94,"column":4},"name":"console"},{"generated":{"line":111,"column":19},"source":"src/index.js","original":{"line":94,"column":11}},{"generated":{"line":111,"column":20},"source":"src/index.js","original":{"line":94,"column":12},"name":"log"},{"generated":{"line":111,"column":23},"source":"src/index.js","original":{"line":94,"column":4}},{"generated":{"line":111,"column":24},"source":"src/index.js","original":{"line":94,"column":16}},{"generated":{"line":111,"column":41},"source":"src/index.js","original":{"line":94,"column":4}},{"generated":{"line":111,"column":43},"source":"src/index.js","original":{"line":94,"column":35}},{"generated":{"line":111,"column":55},"source":"src/index.js","original":{"line":94,"column":37},"name":"message"},{"generated":{"line":111,"column":62},"source":"src/index.js","original":{"line":94,"column":4}},{"generated":{"line":113,"column":10},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":114,"column":10},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":115,"column":12},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":116,"column":8},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":117,"column":6},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":118,"column":4},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":119,"column":2},"source":"src/index.js","original":{"line":80,"column":19}},{"generated":{"line":119,"column":3},"source":"src/index.js","original":{"line":80,"column":16}},{"generated":{"line":121,"column":2},"source":"src/index.js","original":{"line":80,"column":16}},{"generated":{"line":121,"column":18},"source":"src/index.js","original":{"line":80,"column":6},"name":"getNewTodo"},{"generated":{"line":121,"column":28},"source":"src/index.js","original":{"line":80,"column":16}},{"generated":{"line":122,"column":4},"source":"src/index.js","original":{"line":80,"column":16}},{"generated":{"line":123,"column":2},"source":"src/index.js","original":{"line":80,"column":16}},{"generated":{"line":124,"column":0},"source":"src/index.js","original":{"line":80,"column":16}},{"generated":{"line":124,"column":3},"source":"src/index.js","original":{"line":80,"column":0}},{"generated":{"line":124,"column":5},"source":"src/index.js","original":{"line":98,"column":0}},{"generated":{"line":125,"column":0},"source":"src/index.js","original":{"line":99,"column":0}},{"generated":{"line":126,"column":0},"source":"src/index.js","original":{"line":100,"column":0}},{"generated":{"line":127,"column":0},"source":"src/index.js","original":{"line":101,"column":0}},{"generated":{"line":128,"column":0},"source":"src/index.js","original":{"line":102,"column":0}},{"generated":{"line":129,"column":0},"source":"src/index.js","original":{"line":103,"column":0}},{"generated":{"line":130,"column":0},"source":"src/index.js","original":{"line":104,"column":0}},{"generated":{"line":131,"column":0},"source":"src/index.js","original":{"line":106,"column":0}},{"generated":{"line":132,"column":0},"source":"src/index.js","original":{"line":107,"column":0}},{"generated":{"line":133,"column":0},"source":"src/index.js","original":{"line":108,"column":0}},{"generated":{"line":134,"column":0},"source":"src/index.js","original":{"line":109,"column":0}},{"generated":{"line":135,"column":0},"source":"src/index.js","original":{"line":110,"column":0}},{"generated":{"line":136,"column":0},"source":"src/index.js","original":{"line":111,"column":0}},{"generated":{"line":137,"column":0},"source":"src/index.js","original":{"line":112,"column":0}},{"generated":{"line":138,"column":0},"source":"src/index.js","original":{"line":113,"column":0}},{"generated":{"line":139,"column":0},"source":"src/index.js","original":{"line":115,"column":0}},{"generated":{"line":140,"column":0},"source":"src/index.js","original":{"line":116,"column":0}},{"generated":{"line":141,"column":0},"source":"src/index.js","original":{"line":117,"column":0}},{"generated":{"line":142,"column":0},"source":"src/index.js","original":{"line":118,"column":0}},{"generated":{"line":143,"column":0},"source":"src/index.js","original":{"line":119,"column":0}},{"generated":{"line":144,"column":0},"source":"src/index.js","original":{"line":120,"column":0}},{"generated":{"line":145,"column":0},"source":"src/index.js","original":{"line":121,"column":0}},{"generated":{"line":146,"column":0},"source":"src/index.js","original":{"line":122,"column":0}},{"generated":{"line":147,"column":0},"source":"src/index.js","original":{"line":123,"column":0}},{"generated":{"line":148,"column":0},"source":"src/index.js","original":{"line":124,"column":0}},{"generated":{"line":149,"column":0},"source":"src/index.js","original":{"line":125,"column":0}},{"generated":{"line":150,"column":0},"source":"src/index.js","original":{"line":126,"column":0}},{"generated":{"line":151,"column":0},"source":"src/index.js","original":{"line":127,"column":0}},{"generated":{"line":152,"column":0},"source":"src/index.js","original":{"line":128,"column":0}},{"generated":{"line":153,"column":0},"source":"src/index.js","original":{"line":129,"column":0}},{"generated":{"line":154,"column":0},"source":"src/index.js","original":{"line":130,"column":0}},{"generated":{"line":155,"column":0},"source":"src/index.js","original":{"line":131,"column":0}},{"generated":{"line":156,"column":0},"source":"src/index.js","original":{"line":132,"column":0}},{"generated":{"line":157,"column":0},"source":"src/index.js","original":{"line":133,"column":0}},{"generated":{"line":158,"column":0},"source":"src/index.js","original":{"line":134,"column":0}},{"generated":{"line":159,"column":0},"source":"src/index.js","original":{"line":135,"column":0}},{"generated":{"line":160,"column":0},"source":"src/index.js","original":{"line":136,"column":0}},{"generated":{"line":161,"column":0},"source":"src/index.js","original":{"line":137,"column":0}},{"generated":{"line":162,"column":0},"source":"src/index.js","original":{"line":138,"column":0}},{"generated":{"line":163,"column":0},"source":"src/index.js","original":{"line":139,"column":0}},{"generated":{"line":164,"column":0},"source":"src/index.js","original":{"line":141,"column":0}},{"generated":{"line":165,"column":0},"source":"src/index.js","original":{"line":143,"column":0}},{"generated":{"line":166,"column":0},"source":"src/index.js","original":{"line":144,"column":0}},{"generated":{"line":167,"column":0},"source":"src/index.js","original":{"line":145,"column":0}},{"generated":{"line":168,"column":0},"source":"src/index.js","original":{"line":146,"column":0}},{"generated":{"line":169,"column":0},"source":"src/index.js","original":{"line":148,"column":0}},{"generated":{"line":170,"column":0},"source":"src/index.js","original":{"line":149,"column":0}},{"generated":{"line":171,"column":0},"source":"src/index.js","original":{"line":150,"column":0}},{"generated":{"line":172,"column":0},"source":"src/index.js","original":{"line":151,"column":0}},{"generated":{"line":173,"column":0},"source":"src/index.js","original":{"line":152,"column":0}},{"generated":{"line":174,"column":0},"source":"src/index.js","original":{"line":153,"column":0}},{"generated":{"line":175,"column":0},"source":"src/index.js","original":{"line":154,"column":0}},{"generated":{"line":176,"column":0},"source":"src/index.js","original":{"line":156,"column":0}},{"generated":{"line":177,"column":0},"source":"src/index.js","original":{"line":157,"column":0}},{"generated":{"line":178,"column":0},"source":"src/index.js","original":{"line":158,"column":0}},{"generated":{"line":179,"column":0},"source":"src/index.js","original":{"line":159,"column":0}},{"generated":{"line":180,"column":0},"source":"src/index.js","original":{"line":160,"column":0}},{"generated":{"line":181,"column":0},"source":"src/index.js","original":{"line":161,"column":0}},{"generated":{"line":182,"column":0},"source":"src/index.js","original":{"line":162,"column":0}},{"generated":{"line":183,"column":0},"source":"src/index.js","original":{"line":163,"column":0}},{"generated":{"line":184,"column":0},"source":"src/index.js","original":{"line":164,"column":0}},{"generated":{"line":185,"column":0},"source":"src/index.js","original":{"line":165,"column":0}},{"generated":{"line":186,"column":0},"source":"src/index.js","original":{"line":166,"column":0}},{"generated":{"line":187,"column":0},"source":"src/index.js","original":{"line":167,"column":0}},{"generated":{"line":188,"column":0},"source":"src/index.js","original":{"line":168,"column":0}},{"generated":{"line":189,"column":0},"source":"src/index.js","original":{"line":169,"column":0}},{"generated":{"line":190,"column":0},"source":"src/index.js","original":{"line":170,"column":0}},{"generated":{"line":191,"column":0},"source":"src/index.js","original":{"line":171,"column":0}},{"generated":{"line":192,"column":0},"source":"src/index.js","original":{"line":173,"column":0}},{"generated":{"line":193,"column":0},"source":"src/index.js","original":{"line":174,"column":0}},{"generated":{"line":194,"column":0},"source":"src/index.js","original":{"line":175,"column":0}},{"generated":{"line":195,"column":0},"source":"src/index.js","original":{"line":176,"column":0}},{"generated":{"line":196,"column":0},"source":"src/index.js","original":{"line":177,"column":0}},{"generated":{"line":197,"column":0},"source":"src/index.js","original":{"line":178,"column":0}},{"generated":{"line":198,"column":0},"source":"src/index.js","original":{"line":179,"column":0}},{"generated":{"line":199,"column":0},"source":"src/index.js","original":{"line":181,"column":0}},{"generated":{"line":200,"column":0},"source":"src/index.js","original":{"line":182,"column":0}},{"generated":{"line":201,"column":0},"source":"src/index.js","original":{"line":183,"column":0}},{"generated":{"line":202,"column":0},"source":"src/index.js","original":{"line":184,"column":0}},{"generated":{"line":203,"column":0},"source":"src/index.js","original":{"line":185,"column":0}},{"generated":{"line":204,"column":0},"source":"src/index.js","original":{"line":186,"column":0}},{"generated":{"line":205,"column":0},"source":"src/index.js","original":{"line":187,"column":0}},{"generated":{"line":206,"column":0},"source":"src/index.js","original":{"line":188,"column":0}},{"generated":{"line":207,"column":0},"source":"src/index.js","original":{"line":189,"column":0}}],"sources":{"src/index.js":"//...copy\nlet arr1 = [1, 2, 3, 4, 5];\nlet state = {\n  name: \"Nga\",\n  address: \"Thanh Hoa\",\n  channel: \"Eric\",\n};\n// console.log(\"get data arr1 >> \", arr1);\n\n// let arr2 = [0,...arr1, 6] // copy lai arr1 bo vao\n// let arr2 = { ...state, channel: \"erict\" };\n// console.log(\"get data arr1 >> \", arr2);\n\n// Cach 1\n// let name = state.name;\n// let address = state.address;\n// let channel = state.channel;\n\n// Cach 2\n// let { name1, address, channel } = state; // phai trung ten voi key cua object\n// console.log(\"check key >> \", name1, address, channel);\n\nlet arr = [\"Nga\", \"Eric\"];\nlet [name, channel] = arr;\nconsole.log(\"check key >> \", name, channel);\n\n// callback\nconst callback = (error, data) => {\n  if (error) {\n    console.log(\"Error >> \", error);\n  }\n  if (data) {\n    console.log(\"OK >> \", data);\n  }\n};\n\nfunction getTodos(id, callback) {\n  return new Promise((resolve, reject) => {\n    var request = new XMLHttpRequest();\n    request.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        const data = JSON.parse(request.responseText);\n        // const dataString = JSON.stringify(data);\n        // callback(undefined, data);\n        // callback(undefined, dataString);\n        resolve(data);\n      }\n\n      if (this.readyState === 4 && this.status !== 200) {\n        // callback(\"Somethings wrongs\", undefined);\n        reject(\"Error id \" + id);\n      }\n    };\n\n    request.open(\n      \"GET\",\n      `https://jsonplaceholder.typicode.com/todos/${id}`,\n      true\n    );\n    // request.open(\"GET\", \"src/data.json\", true);\n    request.send();\n  });\n}\n\n// Async & Await example\n// const getNewTodo = async (id) => {\n//   let response = await fetch(\n//     `https://jsonplaceholder.typicode.com/todos/${id}`\n//   );\n\n//   if (response && response.status !== 200) {\n//     throw new Error(\"Somethong wrongs with status code \" + response.status);\n//     // reject\n//   }\n\n//   let data = await response.json();\n//   return data; //resolve\n// };\n\nconst getNewTodo = async (id) => {\n  try {\n    let response = await fetch(\n      `https://jsonplaceholder.typicode.com/todos/${id}`\n    );\n\n    if (response && response.status !== 200) {\n      throw new Error(\"Somethong wrongs with status code \" + response.status);\n      // reject\n    }\n\n    let data = await response.json();\n    return data; //resolve\n  } catch (e) {\n    console.log(\"check catch >> \", e.message);\n  }\n};\n\n// getNewTodo(\"gfasa\")\n//   .then((data) => {\n//     console.log(\"check get data >> \", data);\n//   })\n//   .catch((error) => {\n//     console.log(\"check error >> \", error.message);\n//   });\n\n// fetch API example\n// fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n//   .then((Response) => {\n//     return Response.json();\n//   })\n//   .then((data) => {\n//     console.log(\"check fetch data >> \", data);\n//   });\n\n// Callbacck Hell example\n// getTodos(1, (error, data) => {\n//   if (error) {\n//     console.log(\"Error >> \", error);\n//   }\n//   if (data) {\n//     console.log(\"OK >> \", data);\n//     getTodos(2, (error, data) => {\n//       if (error) {\n//         console.log(\"Error >> \", error);\n//       }\n//       if (data) {\n//         console.log(\"OK >> \", data);\n//         getTodos(3, (error, data) => {\n//           if (error) {\n//             console.log(\"Error >> \", error);\n//           }\n//           if (data) {\n//             console.log(\"OK >> \", data);\n//           }\n//         });\n//       }\n//     });\n//   }\n// });\n\n// getTodos(1, callback);\n\n// Promise example\n// getTodos(1)\n//   .then((data) => {\n//     console.log(\"OK1 >> \", data);\n\n//     getTodos(2).then((data) => {\n//       console.log(\"OK2 >> \", data);\n//     });\n//   })\n//   .catch((error) => {\n//     console.log(\">> \", error);\n//   });\n\n// getTodos(1)\n//   .then((data1) => {\n//     console.log(\"OK1 >> \", data1);\n//     return getTodos(2);\n//     // return getTodos(\"2jasj\");\n//   })\n//   .then((data2) => {\n//     console.log(\"OK2 >> \", data2);\n//     return getTodos(3);\n//   })\n//   .then((data3) => {\n//     console.log(\"OK3 >> \", data3);\n//   })\n//   .catch((error) => {\n//     console.log(\">> \", error);\n//   });\n\n// promise example\n// const promiseExp = () => {\n//   // Cach 1\n//   return new Promise((resolve, reject) => {\n//     // resolve(\"get some data\");\n//     resolve({ name: \"Nga\", channel: \"erict\" });\n//   });\n\n//   // Cach 2\n//   // return new Promise(function(resolve, reject) {});\n// };\n// promiseExp()\n//   .then((data) => {\n//     console.log(data);\n//   }).then((error) => {\n//     console.log(\"Error\");\n//   });\n"},"lineCount":null}},"error":null,"hash":"4e73612dc6654b9deabc89bb4d1ab8df","cacheData":{"env":{}}}